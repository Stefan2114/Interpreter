PrgState with id: 1
ExecStack:
Ref int v1;
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v1;
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v1;
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
Ref int v2;
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int x;
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
int q;
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
new(v1, 20);
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (0,int)
v2 -> (0,int)

Out:

FileTable:

Heap:

LockTable:


PrgState with id: 1
ExecStack:
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (0,int)

Out:

FileTable:

Heap:
1 -> 20

LockTable:


PrgState with id: 1
ExecStack:
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (0,int)

Out:

FileTable:

Heap:
1 -> 20

LockTable:


PrgState with id: 1
ExecStack:
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (0,int)

Out:

FileTable:

Heap:
1 -> 20

LockTable:


PrgState with id: 1
ExecStack:
new(v2, 30);
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (0,int)

Out:

FileTable:

Heap:
1 -> 20

LockTable:


PrgState with id: 1
ExecStack:
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:


PrgState with id: 1
ExecStack:
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:


PrgState with id: 1
ExecStack:
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:


PrgState with id: 1
ExecStack:
newLock( x )
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:


PrgState with id: 1
ExecStack:
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x ) );
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 2
ExecStack:
thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 2
ExecStack:
thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 2
ExecStack:
thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
newLock( q )
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 0
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 2
ExecStack:
thread( lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x ) );
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 2
ExecStack:
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 2
ExecStack:
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 2
ExecStack:
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
thread( thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q ) );
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 2
ExecStack:
lock( x )
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
wH(v1, rH(v1) MULTIPLY 10);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
thread( lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q ) );
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 20
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 2
ExecStack:
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 4
ExecStack:
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 2
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 4
ExecStack:
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 3
ExecStack:
lock( x )
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 4
ExecStack:
lock( q )
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
wH(v1, rH(v1) SUBTRACT 1);
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
wH(v2, rH(v2) MULTIPLY 10);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 200
2 -> 30

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 3
ExecStack:
unlock( x )

SymTable:
x -> 1
q -> 0
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 4
ExecStack:
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 5
ExecStack:
lock( q )
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> 3
2 -> 4


PrgState with id: 1
ExecStack:
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
NopeStatement
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
wH(v2, rH(v2) ADD 5);
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 300

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
lock( x )
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 5


PrgState with id: 5
ExecStack:
unlock( q )

SymTable:
x -> 1
q -> 2
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 5


PrgState with id: 1
ExecStack:
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
print(rH(v1));
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
unlock( x )
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> 1
2 -> -1


PrgState with id: 1
ExecStack:
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
lock( q )
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> -1


PrgState with id: 1
ExecStack:
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


PrgState with id: 1
ExecStack:
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


PrgState with id: 1
ExecStack:
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


PrgState with id: 1
ExecStack:
print(rH(v2));
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


PrgState with id: 1
ExecStack:
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199
305

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


PrgState with id: 1
ExecStack:
unlock( q )

SymTable:
q -> 2
x -> 1
v1 -> (1,int)
v2 -> (2,int)

Out:
199
305

FileTable:

Heap:
1 -> 199
2 -> 305

LockTable:
1 -> -1
2 -> 1


